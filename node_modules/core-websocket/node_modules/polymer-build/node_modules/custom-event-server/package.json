{
  "name": "custom-event-server",
  "version": "0.0.0",
  "description": "Extends the DOM CustomEvent model through to the server",
  "main": "index.js",
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "https://github.com/wballard/custom-event-server.git"
  },
  "author": {
    "name": "Will Ballard",
    "email": "wballard@mailframe.net"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/wballard/custom-event-server/issues"
  },
  "homepage": "https://github.com/wballard/custom-event-server",
  "dependencies": {
    "coffee-script": "^1.7.1",
    "colors": "^0.6.2",
    "js-yaml": "^3.0.2",
    "ws": "^0.4.31"
  },
  "readme": "#Overview\nI love the [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent)\nmodel in the DOM. A nice simple (name, detail) pairing. So, this is my take on\nusing that same model on the server. In my mind it fits with end-to-end\nJavaScript to think about end-to-end events.\n\n#Getting Started\n\n##Install\n```shell\nnpm install --save custom-event-server\n```\n\n###Simple Server\n```coffeescript\nserver = require('custom-event-server')()\nserver.on 'beep', (name, detail, client) ->\n  client.fire 'boop', {}\nserver.on 'woot', (name, detail, client) ->\n  console.log 'ahhh!'\nserver.listen 8080\n```\n\n###Simple Client\nThis uses the [core-custom-event-client](https://github.com/Custom-Elements/core-custom-event-client)\nwhich is a [Polymer](http://www.polymer-project.org/) element.\n\n```html\n<core-custom-event-client id=\"localhost\" servers='ws://localhost:8080' onboop='this.server.fire(\"woot\")'>\n</core-custom-event-client>\n```\n\nAnd of course you can `addEventListener`, use a jQuery `on`, or bind a Polymer\nstyle `on-boop='{{}}'`\n\n#Theory\nSo the idea is that events coming from the server look and feel like events\ncoming from other DOM elements. And, that instead of RPC/REST/Messages, you\nfire events on the server.\n\n##Messages\nThis is really just a web socket, but it adopts a (name, detail) protocol. About\nthe only thing to keep in mind is to make sure your detail can be JSON serialized.\n\n##Built Ins\n### hello\nFired from the server back to your client on a connection or\nreconnection.\n### ping\nFired from the client `core-custom-event-client` element on a timer.\nPretty much any load balancer or proxy you put in front will time out and tear\ndown your web socket without this.\n### pong\nFired from the server back to the client in response to a `ping`.\n",
  "readmeFilename": "README.md",
  "_id": "custom-event-server@0.0.0",
  "_from": "custom-event-server@^0.0.0"
}
